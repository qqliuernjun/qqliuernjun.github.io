{"title":"vue 前序","date":"2019-01-22T14:55:53.000Z","slug":"vue","tags":["vue"],"categories":["vue"],"updated":"2019-01-22T15:11:59.000Z","content":"<p>vue 权威指南</p>\n<blockquote>\n<p>链接: <a href=\"https://pan.baidu.com/s/1WCUp2lz1bUc-oTiohUFHPw\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1WCUp2lz1bUc-oTiohUFHPw</a> 提取码: 9b8u</p>\n</blockquote>\n<div class=\"article-img\"><p><img src=\"/2019/01/22/vue/vue.jpg\" alt=\"你想要输入的替代文字\"></p></div>\n<h2 id=\"vue如何动态绑定图片\"><a href=\"#vue如何动态绑定图片\" class=\"headerlink\" title=\"vue如何动态绑定图片\"></a>vue如何动态绑定图片</h2><ul>\n<li>图片的绑定需要使用v-bind:src</li>\n<li>在data中用require(“”)引入图片路径</li>\n<li>把图片放在static中</li>\n</ul>\n<h2 id=\"三种前端架构模式\"><a href=\"#三种前端架构模式\" class=\"headerlink\" title=\"三种前端架构模式\"></a>三种前端架构模式</h2><ol>\n<li>mvvm  model（模型）-viewModel（）-view（视图）<blockquote>\n<p>viewModel 实现了observe（类似观察者模式）</p>\n</blockquote>\n</li>\n<li>mvc  </li>\n<li>mvp</li>\n</ol>\n<h2 id=\"v-model修饰符\"><a href=\"#v-model修饰符\" class=\"headerlink\" title=\"v-model修饰符\"></a>v-model修饰符</h2><ol>\n<li>lazy 只有文本框的on-change触发后值才会发生改变</li>\n<li>number 将输入的值转为number类型</li>\n<li>trim 去掉输入的字符串后的空格</li>\n</ol>\n<blockquote>\n<p>使用<code>v-for</code>的时候必须绑定一个<code>key</code>,为了区分每一项遍历的内容</p>\n</blockquote>\n<blockquote>\n<p>我们应当尽量避免给已经<code>v-model</code>的数组赋值，如果需要复制的话，请使用<code>$set</code></p>\n</blockquote>\n<h2 id=\"vue绑定class\"><a href=\"#vue绑定class\" class=\"headerlink\" title=\"vue绑定class\"></a>vue绑定class</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTML代码：</span><br><span class=\"line\">&lt;div :class=&quot;&#123; &apos;class-a&apos;: isA, &apos;class-b&apos;: isB&#125;&quot;&gt;Demo4&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Javascript代码：</span><br><span class=\"line\">data: &#123;</span><br><span class=\"line\">  isA: false,  //当isA改变时，将更新class</span><br><span class=\"line\">  isB: true    //当isB改变时，将更新class</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">渲染后的HTML:</span><br><span class=\"line\">&lt;div class=&quot;class-b&quot;&gt;Demo4&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTML代码：</span><br><span class=\"line\">&lt;div :class=&quot;objectClass&quot;&gt;Demo5&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Javascript代码：</span><br><span class=\"line\">data: &#123;</span><br><span class=\"line\">  objectClass: &#123;</span><br><span class=\"line\">    class-a: true,</span><br><span class=\"line\">    class-b: false</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">渲染后的HTML:</span><br><span class=\"line\">&lt;div class=&quot;class-a&quot;&gt;Demo5&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTML代码：</span><br><span class=\"line\">&lt;div :class=&quot;[classA, classB]&quot;&gt;Demo6&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Javascript代码：</span><br><span class=\"line\">data: &#123;</span><br><span class=\"line\">  classA: &apos;class-a&apos;,</span><br><span class=\"line\">  classB: &apos;class-b&apos;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">渲染后的HTML:</span><br><span class=\"line\">&lt;div class=&quot;class-a class-b&quot;&gt;Demo6&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<div class=\"article-img\"><p><img src=\"/2019/01/22/vue/style.png\" alt=\"你想要输入的替代文字\"></p></div>\n<h2 id=\"vue绑定style\"><a href=\"#vue绑定style\" class=\"headerlink\" title=\"vue绑定style\"></a>vue绑定style</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div :style=&quot;&#123; fontSize: size + &apos;px&apos; &#125;&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"sync修饰符\"><a href=\"#sync修饰符\" class=\"headerlink\" title=\"sync修饰符\"></a>sync修饰符</h2><ol>\n<li>在父组件使用sync绑定一个值 <code>:modelVal.sync=&quot;tree.val1&quot;</code></li>\n<li>在子组件data中定义一个realVal,<code>realVal:this.modelVal</code></li>\n<li>子组件绑定realVal</li>\n<li>使用watch监听realVal<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">realVal(newVal,oldVal)&#123;</span><br><span class=\"line\">    this.$emit(&quot;update:modelVal&quot;,newVal)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"prop\"><a href=\"#prop\" class=\"headerlink\" title=\"prop\"></a>prop</h2><ol>\n<li><p>校验</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">propF: &#123;</span><br><span class=\"line\">      validator: function (value) &#123;</span><br><span class=\"line\">        // 这个值必须匹配下列字符串中的一个</span><br><span class=\"line\">        return [&apos;success&apos;, &apos;warning&apos;, &apos;danger&apos;].indexOf(value) !== -1</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>给对象或数组赋默认值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">propE: &#123;</span><br><span class=\"line\">      type: Object,</span><br><span class=\"line\">      // 对象或数组默认值必须从一个工厂函数获取</span><br><span class=\"line\">      default: function () &#123;</span><br><span class=\"line\">        return &#123; message: &apos;hello&apos; &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"作用域插槽的使用方法\"><a href=\"#作用域插槽的使用方法\" class=\"headerlink\" title=\"作用域插槽的使用方法\"></a>作用域插槽的使用方法</h2><blockquote>\n<p>写组件的时候要多用插槽slot</p>\n</blockquote>\n<blockquote>\n<p>在自组件里面使用<code>slot</code>并在<code>slot</code>标签上绑定属性，在父组件中使用<code>slot-scope</code>可以获取子组件上<code>slot</code>绑定的数据</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">    &lt;script src=&quot;https://unpkg.com/vue/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;div id=&quot;example&quot;&gt;</span><br><span class=\"line\">        &lt;child :list=&quot;list&quot;&gt;</span><br><span class=\"line\">                &lt;template slot-scope=&quot;item&quot;&gt;</span><br><span class=\"line\">                    &lt;div v-if=&quot;item.item.id===1&quot;&gt;&#123;&#123;item.item.id&#125;&#125; &lt;/div&gt;</span><br><span class=\"line\">                    &lt;div v-else&gt;&#123;&#123;item.item.name&#125;&#125; &lt;/div&gt;</span><br><span class=\"line\">                &lt;/template&gt;</span><br><span class=\"line\">        &lt;/child&gt;      </span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">        Vue.component(&apos;child&apos;,&#123;</span><br><span class=\"line\">            props:[&apos;list&apos;],</span><br><span class=\"line\">            template:`</span><br><span class=\"line\">                &lt;div&gt;</span><br><span class=\"line\">                    &lt;ul&gt;</span><br><span class=\"line\">                        &lt;li v-for=&quot;(item,index) in list&quot; :key=&quot;index&quot;&gt;</span><br><span class=\"line\">                            &lt;slot :item=&quot;item&quot;&gt;</span><br><span class=\"line\">                            </span><br><span class=\"line\">                            &lt;/slot&gt;</span><br><span class=\"line\">                        &lt;/li&gt;</span><br><span class=\"line\">                    &lt;/ul&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            `</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        var vm = new Vue(&#123;</span><br><span class=\"line\">            el: &apos;#example&apos;,</span><br><span class=\"line\">            data: &#123;</span><br><span class=\"line\">                list:[</span><br><span class=\"line\">                    &#123;id:1,name:11&#125;,</span><br><span class=\"line\">                    &#123;id:2,name:22&#125;,</span><br><span class=\"line\">                    &#123;id:3,name:33&#125;,</span><br><span class=\"line\">                    &#123;id:4,name:44&#125;</span><br><span class=\"line\">                ]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"this-nextTick\"><a href=\"#this-nextTick\" class=\"headerlink\" title=\"this.$nextTick\"></a>this.$nextTick</h2><ul>\n<li>在vue中DOM的更新是异步的</li>\n<li>在Vue生命周期的created()钩子函数进行的DOM操作一定要放在Vue.nextTick()的回调函数中</li>\n<li>在数据变化后要执行的某个操作，而这个操作需要使用随数据改变而改变的DOM结构的时候，这个操作都应该放进Vue.nextTick()的回调函数中。</li>\n</ul>\n<p>模板<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;div ref=&quot;msgDiv&quot;&gt;&#123;&#123;msg&#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">  &lt;div v-if=&quot;msg1&quot;&gt;Message got outside $nextTick: &#123;&#123;msg1&#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">  &lt;div v-if=&quot;msg2&quot;&gt;Message got inside $nextTick: &#123;&#123;msg2&#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">  &lt;div v-if=&quot;msg3&quot;&gt;Message got outside $nextTick: &#123;&#123;msg3&#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">  &lt;button @click=&quot;changeMsg&quot;&gt;</span><br><span class=\"line\">    Change the Message</span><br><span class=\"line\">  &lt;/button&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>vue实例<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new Vue(&#123;</span><br><span class=\"line\">  el: &apos;.app&apos;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    msg: &apos;Hello Vue.&apos;,</span><br><span class=\"line\">    msg1: &apos;&apos;,</span><br><span class=\"line\">    msg2: &apos;&apos;,</span><br><span class=\"line\">    msg3: &apos;&apos;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    changeMsg() &#123;</span><br><span class=\"line\">      this.msg = &quot;Hello world.&quot;</span><br><span class=\"line\">      this.msg1 = this.$refs.msgDiv.innerHTML</span><br><span class=\"line\">      this.$nextTick(() =&gt; &#123;</span><br><span class=\"line\">        this.msg2 = this.$refs.msgDiv.innerHTML</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      this.msg3 = this.$refs.msgDiv.innerHTML</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>点击前<br><img src=\"/2019/01/22/vue/before.png\" alt=\"你想要输入的替代文字\"></p>\n<p>点击后<br><img src=\"/2019/01/22/vue/after.png\" alt=\"你想要输入的替代文字\"></p>\n<h2 id=\"this-ref-root-parent\"><a href=\"#this-ref-root-parent\" class=\"headerlink\" title=\"this,ref,$root,$parent\"></a>this,ref,$root,$parent</h2><ol>\n<li><p><code>this</code> 当前页面的实例</p>\n</li>\n<li><p><code>this.$root</code> 页面的根实例 </p>\n</li>\n<li><p><code>this.$parent</code> 获取父组件的实例</p>\n</li>\n<li><p>给当前组件加上<code>ref</code>属性,通过<code>this.$refs[&#39;ref&#39;]</code>可以获取组件的实例</p>\n</li>\n</ol>\n<h2 id=\"依赖注入\"><a href=\"#依赖注入\" class=\"headerlink\" title=\"依赖注入\"></a>依赖注入</h2><p>父组件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">provide: function () &#123;</span><br><span class=\"line\">  return &#123;</span><br><span class=\"line\">    getMap: this.getMap</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>子组件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">inject[&apos;getMap&apos;]</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>这样这个父组件的<code>所有后代组件</code>都可以访问父组件的<code>getMap</code>方法</p>\n</blockquote>\n<h2 id=\"混入mixins\"><a href=\"#混入mixins\" class=\"headerlink\" title=\"混入mixins\"></a>混入mixins</h2><p>可以写一个通用的js文件,import引入之后可以通过mixins混入当前页面,会和当前页面的一些方法属性融合</p>\n<h2 id=\"组件间的数据传递\"><a href=\"#组件间的数据传递\" class=\"headerlink\" title=\"组件间的数据传递\"></a>组件间的数据传递</h2><ol>\n<li>父-&gt;子  <code>props</code></li>\n<li>子-&gt;父  <code>子组件$emit(eventName,params) 父组件$on(eventName)</code></li>\n<li>兄弟组件之间 <code>创建一个公共的Bus=new Vue() ,Bus.$on(eventName,eventHandler)抛出事件 Bus.$emit(eventName)触发事件</code> </li>\n<li>停止监听事件 <code>$off(eventName,eventHandler)</code></li>\n</ol>\n<h2 id=\"vue生命周期\"><a href=\"#vue生命周期\" class=\"headerlink\" title=\"vue生命周期\"></a>vue生命周期</h2><ol>\n<li>beforeCreate<blockquote>\n<p><code>el</code>没有挂载,<code>data</code>还没有生成</p>\n</blockquote>\n</li>\n<li>created<blockquote>\n<p><code>el</code>没有挂载,<code>data</code>已经生成</p>\n</blockquote>\n</li>\n<li>beforeMount<blockquote>\n<p><code>el</code>已经被挂载,<code>data</code>已经生成,数据没有被渲染</p>\n</blockquote>\n</li>\n<li>mounted<blockquote>\n<p>数据开始被渲染</p>\n</blockquote>\n</li>\n<li>beforeUpdated<blockquote>\n<p>组件更新之前的状态</p>\n</blockquote>\n</li>\n<li>update<blockquote>\n<p>组件更新之后的状态</p>\n</blockquote>\n</li>\n<li><p>beforeDestroy</p>\n</li>\n<li><p>destroyed</p>\n<ol>\n<li>页面切换时组件会自动被销毁,组件被销毁之后会触发</li>\n<li>Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会<code>解绑定</code>，所有的事件监听器会被移除，所有的子实例也会被销毁。 该钩子在服务器端渲染期间不被调用。</li>\n<li>此时修改实例中的内容<code>Dom</code>不会发生任何改变</li>\n</ol>\n</li>\n<li><p>vue没有挂载el上的时候可以使用$mount()挂载</p>\n</li>\n</ol>\n<h2 id=\"定义模板的方式\"><a href=\"#定义模板的方式\" class=\"headerlink\" title=\"定义模板的方式\"></a>定义模板的方式</h2><ol>\n<li><p>内联模板</p>\n<blockquote>\n<p>写在组件上的属性,会弃用子组件的内容而选择父组件所包含的内容<br><img src=\"/2019/01/22/vue/vue1.png\" alt=\"你想要输入的替代文字\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">    &lt;script src=&quot;https://unpkg.com/vue/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;div id=&quot;example&quot; &gt;</span><br><span class=\"line\">        &lt;child :list=&quot;list&quot; inline-template&gt;</span><br><span class=\"line\">              &lt;div&gt;1111&lt;/div&gt;</span><br><span class=\"line\">        &lt;/child&gt;      </span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">        Vue.component(&apos;child&apos;,&#123;</span><br><span class=\"line\">            props:[&apos;list&apos;],</span><br><span class=\"line\">            template:`</span><br><span class=\"line\">                &lt;div&gt;</span><br><span class=\"line\">                    &lt;ul&gt;</span><br><span class=\"line\">                        &lt;li v-for=&quot;(item,index) in list&quot; :key=&quot;index&quot;&gt;</span><br><span class=\"line\">                            &#123;&#123;item.name&#125;&#125;</span><br><span class=\"line\">                        &lt;/li&gt;</span><br><span class=\"line\">                    &lt;/ul&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            `</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        var vm = new Vue(&#123;</span><br><span class=\"line\">            el: &apos;#example&apos;,</span><br><span class=\"line\">            data: &#123;</span><br><span class=\"line\">                list:[</span><br><span class=\"line\">                    &#123;id:1,name:11&#125;,</span><br><span class=\"line\">                    &#123;id:2,name:22&#125;,</span><br><span class=\"line\">                    &#123;id:3,name:33&#125;,</span><br><span class=\"line\">                    &#123;id:4,name:44&#125;</span><br><span class=\"line\">                ]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p>X–Templates</p>\n<blockquote>\n<p>另一个定义模板的方式是在一个 <code>&lt;script&gt;</code> 元素中，并为其带上<code>text/x-template</code>的类型，然后通过一个 id 将模板引用过去。例如：</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/x-template&quot; id=&quot;hello-world-template&quot;&gt;</span><br><span class=\"line\">  &lt;p&gt;Hello hello hello&lt;/p&gt;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.component(&apos;hello-world&apos;, &#123;</span><br><span class=\"line\">  template: &apos;#hello-world-template&apos;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"强制更新-forceUpdate\"><a href=\"#强制更新-forceUpdate\" class=\"headerlink\" title=\"强制更新 $forceUpdate()\"></a>强制更新 $forceUpdate()</h2>","prev":{"title":"vue-axios","slug":"vue-axios"},"next":{"title":"知识点..","slug":"essay"},"link":"http://yoursite.com/post/vue/","toc":[{"title":"vue如何动态绑定图片","id":"vue如何动态绑定图片","index":"1"},{"title":"三种前端架构模式","id":"三种前端架构模式","index":"2"},{"title":"v-model修饰符","id":"v-model修饰符","index":"3"},{"title":"vue绑定class","id":"vue绑定class","index":"4"},{"title":"vue绑定style","id":"vue绑定style","index":"5"},{"title":"sync修饰符","id":"sync修饰符","index":"6"},{"title":"prop","id":"prop","index":"7"},{"title":"作用域插槽的使用方法","id":"作用域插槽的使用方法","index":"8"},{"title":"this.$nextTick","id":"this-nextTick","index":"9"},{"title":"this,ref,$root,$parent","id":"this-ref-root-parent","index":"10"},{"title":"依赖注入","id":"依赖注入","index":"11"},{"title":"混入mixins","id":"混入mixins","index":"12"},{"title":"组件间的数据传递","id":"组件间的数据传递","index":"13"},{"title":"vue生命周期","id":"vue生命周期","index":"14"},{"title":"定义模板的方式","id":"定义模板的方式","index":"15"},{"title":"强制更新 $forceUpdate()","id":"强制更新-forceUpdate","index":"16"}]}